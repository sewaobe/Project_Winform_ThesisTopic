<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnQuayLai.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABZpSURBVHhe7di9
        juXZWcXhuQUkOyOccWKECEBwE56RyBEJd0FCgoS4EySnfPRIlidAMAGaJoIGC9oXgMRcAWba1KY/pqrr
        rKrz8d/rfX7SE5zwSLtqvVWfSJrb5//6+s++ePX6L+4+SnV98W//+edfvPrln959lCS9Gf/PX73+1RuO
        ADX2ZvzfvnFHgCS9N/5vf0E6AtTTu+P/9o07AiQN7r7xXxwBaui+8V8cAZJG9rHxXxwB2rmPjf/iCJA0
        qlPGf3EEaMdOGf/FESBpRMn4L44A7VQy/osjQFJ1Txn/xRGgHXrK+C+OAEmVPWf8F0eAjtxzxn9xBEiq
        6hzjvzgCdMTOMf6LI0BSRecc/8URoCN1zvFfHAGStu4S4784AnSELjH+iyNA0pZdcvwXR4Bu2SXHf3EE
        SNqqa4z/4gjQLbrG+C+OAElbdM3xXxwBumbXHP/FESDp0N1i/BdHgK7RLcZ/cQRIOmS3HP/FEaBLdsvx
        XxwBkg7VEcZ/cQToEh1h/BdHgKRDdKTxXxwBOmdHGv/FESDpph1x/BdHgM7REcd/cQRIuklHHv/FEaDn
        dOTxXxwBkq7aDuO/OAL0lHYY/8URIOkq7TT+iyNASTuN/+IIkHTRdhz/xRGgU9px/BdHgKSLtPP4L44A
        faydx39xBEg6aw3jvzgCdF8N4784AiSdpabxXxwBerem8V8cAZKeVeP4L44Avalx/BdHgKQn1Tz+iyNg
        ds3jvzgCJEVNGP/FETCzCeO/OAIkndSk8V8cAbOaNP6LI0DSR5s4/osjYEYTx39xBEi6t8njvzgCups8
        /osjQNJ7Gf+3HAGdGf+3HAGSfp3x/z5HQFfG//scAdLwjP/DHAEdGf+HOQKkoRn/xzkC9s74P84RIA3L
        +J/OEbBnxv90jgBpSMY/5wjYK+OfcwRI5Rn/p3ME7JHxfzpHgFSa8X8+R8CxM/7P5wiQyjL+5+MIOGbG
        /3wcAVJJxv/8HAHHyvifnyNA2jzjfzmOgGNk/C/HESBtmvG/PEfAbTP+l+cIkDbL+F+PI+A2Gf/rcQRI
        m2T8r88RcN2M//U5AqSDZ/xvxxFwnYz/7TgCpINm/G/PEXDZjP/tOQKkg2X8j8MRcJmM/3E4AqSDZPyP
        xxFw3oz/8TgCpBtn/I/LEXCejP9xOQKkG2X8j88R8LyM//E5AqQrZ/z34Qh4WsZ/H44A6UoZ//04ArKM
        /34cAdKFM/77cgSclvHflyNAulDGf3+OgI9n/PfnCJDOnPHv4Qi4P+PfwxEgnSnj38cR8H7Gv48jQHpm
        xr+XI+D/Mv69HAHSEzP+/aYfAca/nyNACjP+c0w9Aoz/HI4A6cSM/zzTjgDjP48jQHok4z/XlCPA+M/l
        CJAeyPjTfgQYfxwB0gcZf5bWI8D4szgCpLuMPx9qOwKMPx9yBGh8xp+HtBwBxp+HOAI0NuPPY3Y/Aow/
        j3EEaFzGn1PtegQYf07lCNCYjD+hb//wF7/4zbvns0Wfv/rlX97zPeAh/3X3dKTejD+hb7/499e/f/d8
        tshf/oT++/NX//G7d89H6sz4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+
        6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+
        tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4
        EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+
        6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+
        tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4
        EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+
        6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+
        tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4
        EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+
        6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+
        tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4
        EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+
        6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+tDP+6s/4EzL+
        tDP+6s/4E/r2J//y+g/uns8WGX9Cxl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9
        GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92
        xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9C
        xp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9
        GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92
        xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9C
        xp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9
        GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92
        xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9C
        xp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9
        GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92
        xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9C
        xp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9
        GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92xl/9GX9Cxp92
        xl8z+tGX3/zNb/zVP/wKTvGDn379Pz/+2cs/uXs+W/Tp3/7T39/3XeA+P/zujf/2z1/+8d3zkbpzBJBw
        BNDOEaBROQJIOAJo5wjQqBwBJBwBtHMEaFSOABKOANo5AjQqRwAJRwDtHAEalSOAhCOAdo4AjcoRQMIR
        QDtHgEblCCDhCKCdI0CjcgSQcATQzhGgUTkCSDgCaOcI0KgcASQcAbRzBGhUjgASjgDaOQI0KkcACUcA
        7RwBGpUjgIQjgHaOAI3KEUDCEUA7R4BG5Qgg4QignSNAo3IEkHAE0M4RoFE5Akg4AmjnCNCoHAEkHAG0
        cwRoVI4AEo4A2jkCNCpHAAlHAO0cARqVI4CEI4B2jgCNyhFAwhFAO0eARuUIIOEIoJ0jQKNyBJBwBNDO
        EaBROQJIOAJo5wjQqBwBJBwBtHMEaFSOABKOANo5AjQqRwAJRwDtHAEalSOAhCOAdo4AjcoRQMIRQDtH
        gEblCCDhCKCdI0CjcgSQcATQzhGgUTkCSDgCaOcI0KgcASQcAbRzBGhUjgASjgDaOQI0KkcACUcA7RwB
        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
</value>
  </data>
</root>